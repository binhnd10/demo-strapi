envs:
  dev:
    - MEMORY: 0.5
    - DISK_SIZE: 20
    - TASK_COUNT: 1
    - DB_USERNAME: root
    - DB_PASSWORD: remote_credential("DB_PASSWORD_DEV")
    - SLACK_CHANNEL: remote_env("SLACK_CHANNEL")
  prod:
    - CPU: 512
    - MEMORY: 1024
    - DISK_SIZE: 50
    - TASK_COUNT: 2
steps:
  - name: slack_notify_when_start
    plugin: slack
    settings:
      channel: ${SLACK_CHANNEL}
      message: "Start build on brach: ${GIT_BRANCH} repo: ${GIT_REPO}"
    when:
      branch: ["production"]

  - name: test
    plugin: shell
    settings:
      command: echo "hello world - test amd64" && pwd

  - name: inject_env
    plugin: inject_env
    settings:
      rename: [ ".env.cloud", ".env" ]
      inject_file: ".env"

  - name: build_and_push_image
    plugin: fs_docker
    settings:
      build:
        context: .
        dockerfile: ./docker/docker_cloud/Dockerfile
        image_name: demo_strapi
        args:
          - name: "sample"
      push:
        username: dinhbinh161
        password: Haiduong95!
        registry: docker.io
        repo: dinhbinh161/demo_strapi
        tag: latest

  - name: deploy_service
    plugin: fs_deploy
    settings:
#      type: 'ec2|lambda|ecs|on_premise|k8s'
      type: 'ec2'
      ram: ${MEMORY}
      disk:
        size: ${DISK_SIZE}
      use_spot: true
      command: 'docker login -u dinhbinh161 -p Haiduong95! && docker run --rm --name demo_strapi -p 1337:1337 dinhbinh161/demo_strapi'

  - name: release
    plugin: fs_release
    settings:
      use_alb: true

  - name: notify_when_failure
    plugin: slack
    settings:
      channel: ${SLACK_CHANNEL}
      message: "Start build on brach: ${GIT_BRANCH} repo: ${GIT_REPO}"
    when: ["failure"]

branch_env_mappings:
  - "main": "prod"
  - "production": "prod"
  - "master": "prod"
  - "development": "dev"
